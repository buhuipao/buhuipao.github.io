<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on 不会跑</title>
    <link>https://buhuipao.com/tags/linux/</link>
    <description>Recent content in Linux on 不会跑</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>© Copyright buhuipao</copyright>
    <lastBuildDate>Fri, 23 Sep 2016 03:28:25 +0000</lastBuildDate><atom:link href="https://buhuipao.com/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[转载] Linux 文件以及inode</title>
      <link>https://buhuipao.com/2016/09/23/linux-file-inode/</link>
      <pubDate>Fri, 23 Sep 2016 03:28:25 +0000</pubDate>
      
      <guid>https://buhuipao.com/2016/09/23/linux-file-inode/</guid>
      <description>&amp;lt;p&amp;gt; * 文件拥有者的User ID &amp;lt;/p&amp;gt; &amp;lt;p&amp;gt; * 文件的Group ID &amp;lt;/p&amp;gt; &amp;lt;p&amp;gt; * 文件的读、写、执行权限 &amp;lt;/p&amp;gt; &amp;lt;p&amp;gt; * 文件的时间戳，共有三个：ctime指inode上一次变动</description>
    </item>
    
    <item>
      <title>Linux 进程杂乱总结</title>
      <link>https://buhuipao.com/2016/09/13/linux-process/</link>
      <pubDate>Tue, 13 Sep 2016 03:46:16 +0000</pubDate>
      
      <guid>https://buhuipao.com/2016/09/13/linux-process/</guid>
      <description>我们知道在unix/linux中，正常情况下，子进程是通过父进程创建的，子进程在创建新的进程。子进程的结束和父进程的运行是一个异步过程,即父</description>
    </item>
    
    <item>
      <title>不再缘木求鱼，时间如此宝贵，Docker下ubuntu安装QQ失败</title>
      <link>https://buhuipao.com/2016/09/08/docker-ubuntu-qq-failed/</link>
      <pubDate>Wed, 07 Sep 2016 16:55:16 +0000</pubDate>
      
      <guid>https://buhuipao.com/2016/09/08/docker-ubuntu-qq-failed/</guid>
      <description>今下午本来是准备照着国外的一个教程，好好跟着过写一遍如何用python写一个异步web服务端，但是无意中看到一个QQ的新闻，于是想起来很久之</description>
    </item>
    
    <item>
      <title>本站的改造升级，全站https失败</title>
      <link>https://buhuipao.com/2016/08/29/web-update-https/</link>
      <pubDate>Mon, 29 Aug 2016 15:56:52 +0000</pubDate>
      
      <guid>https://buhuipao.com/2016/08/29/web-update-https/</guid>
      <description>最近的找工作压力很大，我这”洁癖男“在压力下想换个思路转一下注意力，以便下一步高效复习准备接下来的运维开发的笔试面试。于是想起自己的网站如今</description>
    </item>
    
    <item>
      <title>【转载WIKI】关于MBR–主引导记录</title>
      <link>https://buhuipao.com/2016/08/20/mbr-wiki/</link>
      <pubDate>Sat, 20 Aug 2016 09:32:31 +0000</pubDate>
      
      <guid>https://buhuipao.com/2016/08/20/mbr-wiki/</guid>
      <description>主引导记录（Master Boot Record，缩写：MBR），又叫做主引导扇区，是计算机{.mw-redirect.mw-disambig}开机后</description>
    </item>
    
    <item>
      <title>Linux下/etc的hosts,hosts.conf,hostname, resolv.conf,hosts.deny/allow文件解释</title>
      <link>https://buhuipao.com/2016/08/16/linux-etc-host/</link>
      <pubDate>Tue, 16 Aug 2016 03:31:21 +0000</pubDate>
      
      <guid>https://buhuipao.com/2016/08/16/linux-etc-host/</guid>
      <description>hosts文件： hosts文件的作用相当如DNS，提供IP地址到hostname的对应。 说明： 早期的互联网计算机少，单机hosts文件里足够</description>
    </item>
    
    <item>
      <title>/etc/hosts.allow和/etc/hosts.deny配置解释</title>
      <link>https://buhuipao.com/2016/08/16/etchosts-allow-etchosts-deny/</link>
      <pubDate>Tue, 16 Aug 2016 03:27:27 +0000</pubDate>
      
      <guid>https://buhuipao.com/2016/08/16/etchosts-allow-etchosts-deny/</guid>
      <description>/etc/hosts.allow和/etc/hosts.deny两个文件是控制远程访问设置的， 修改/etc/hosts.allow文件 sshd:210.13.118.* sshd:222.127.15.* 两</description>
    </item>
    
    <item>
      <title>保持SSH连接不断线（服务端，客户端）</title>
      <link>https://buhuipao.com/2016/08/12/ssh-keep-connected/</link>
      <pubDate>Fri, 12 Aug 2016 04:26:12 +0000</pubDate>
      
      <guid>https://buhuipao.com/2016/08/12/ssh-keep-connected/</guid>
      <description>最近一直游荡于各个校招群，清早群里有人问到如何保持ssh连接，群内有人提出用screen，和nohup等解决办法，不久前我配置Ganglia</description>
    </item>
    
    <item>
      <title>Mysql的基本操作（1）</title>
      <link>https://buhuipao.com/2016/04/25/mysql_basic_operation/</link>
      <pubDate>Mon, 25 Apr 2016 11:57:38 +0000</pubDate>
      
      <guid>https://buhuipao.com/2016/04/25/mysql_basic_operation/</guid>
      <description>登陆数据库： 注：buhuipao_db为登陆后的所用数据库，也可以登陆后在使用：use buhuipao_db； -p后面接密码，直接登陆，不会</description>
    </item>
    
    <item>
      <title>Shell之IS_Root&amp;&amp;</title>
      <link>https://buhuipao.com/2016/04/20/shell%E4%B9%8Bis_root/</link>
      <pubDate>Wed, 20 Apr 2016 13:23:48 +0000</pubDate>
      
      <guid>https://buhuipao.com/2016/04/20/shell%E4%B9%8Bis_root/</guid>
      <description>验证是否为Root： 发行版本：</description>
    </item>
    
    <item>
      <title>Linux 下特殊变量：（$N  $* $@  $!  $?  $0  $$  !$ ）</title>
      <link>https://buhuipao.com/2016/02/23/linux-com/</link>
      <pubDate>Tue, 23 Feb 2016 07:39:52 +0000</pubDate>
      
      <guid>https://buhuipao.com/2016/02/23/linux-com/</guid>
      <description>$N:表示第N个参数，例如$1,$2,$3 $*：表示把所有参数作为一个字符串 $@:表示把每个参数单独作为一个字符串； $!:表示刚执行的命令的</description>
    </item>
    
    <item>
      <title>Linux重要命令之—grep&amp;&amp;cut</title>
      <link>https://buhuipao.com/2016/02/18/linux-script-grep_cut/</link>
      <pubDate>Thu, 18 Feb 2016 13:21:17 +0000</pubDate>
      
      <guid>https://buhuipao.com/2016/02/18/linux-script-grep_cut/</guid>
      <description>grep 的基本用法，找出字符串所在行： 找到字符串所在行，-i 忽略大小写，-n 打印为行号，–color=auto 颜色标记： 使用正则表达式： 还可以用e</description>
    </item>
    
  </channel>
</rss>
